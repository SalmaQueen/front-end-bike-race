[{"/home/salma/Desktop/client/client/src/reportWebVitals.js":"1","/home/salma/Desktop/client/client/src/components/Photos.js":"2","/home/salma/Desktop/client/client/src/components/Data.js":"3","/home/salma/Desktop/client/client/src/components/Footer.js":"4","/home/salma/Desktop/client/client/src/components/Calc.js":"5","/home/salma/Desktop/client/client/src/components/Rider.js":"6","/home/salma/Desktop/client/client/src/components/Timer.js":"7","/home/salma/Desktop/client/client/src/components/SharedCard.js":"8","/home/salma/Desktop/client/client/src/components/Home.js":"9","/home/salma/Desktop/client/client/src/components/Location.js":"10","/home/salma/Desktop/client/client/src/components/Contest.js":"11","/home/salma/Desktop/client/client/src/components/App.js":"12","/home/salma/Desktop/client/client/src/components/Products.js":"13","/home/salma/Desktop/client/client/src/components/Spinner.js":"14","/home/salma/Desktop/client/client/src/components/Images.js":"15","/home/salma/Desktop/client/client/src/components/pagination.js":"16","/home/salma/Desktop/client/client/src/index.js":"17","/home/salma/Desktop/client/client/src/components/Slogan.js":"18"},{"size":362,"mtime":1607849272443,"results":"19","hashOfConfig":"20"},{"size":2000,"mtime":1608494599795,"results":"21","hashOfConfig":"20"},{"size":6280,"mtime":1608744346091,"results":"22","hashOfConfig":"20"},{"size":505,"mtime":1608656756195,"results":"23","hashOfConfig":"20"},{"size":2390,"mtime":1607849546613,"results":"24","hashOfConfig":"20"},{"size":482,"mtime":1608577734071,"results":"25","hashOfConfig":"20"},{"size":749,"mtime":1608742867048,"results":"26","hashOfConfig":"20"},{"size":1864,"mtime":1608577766642,"results":"27","hashOfConfig":"20"},{"size":381,"mtime":1607849546617,"results":"28","hashOfConfig":"20"},{"size":1975,"mtime":1608745484887,"results":"29","hashOfConfig":"20"},{"size":7095,"mtime":1608750466606,"results":"30","hashOfConfig":"20"},{"size":2279,"mtime":1608753107568,"results":"31","hashOfConfig":"20"},{"size":530,"mtime":1607849546625,"results":"32","hashOfConfig":"20"},{"size":657,"mtime":1607849546629,"results":"33","hashOfConfig":"20"},{"size":1319,"mtime":1608743023506,"results":"34","hashOfConfig":"20"},{"size":581,"mtime":1608375904309,"results":"35","hashOfConfig":"20"},{"size":542,"mtime":1608378170758,"results":"36","hashOfConfig":"20"},{"size":2987,"mtime":1608581978387,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"193va47",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"/home/salma/Desktop/client/client/src/reportWebVitals.js",[],["86","87"],"/home/salma/Desktop/client/client/src/components/Photos.js",[],["88","89"],"/home/salma/Desktop/client/client/src/components/Data.js",[],["90","91"],"/home/salma/Desktop/client/client/src/components/Footer.js",["92","93"],"import React, { Component } from 'react'\n\nexport default class Footer extends Component {\n    render() {\n        return (\n            <div>\n        <footer className=\"text-center text-white bg-display\">\n            <ul>\n            <div><a href=\"#\" className=\"text-white\">Privacy</a></div>\n            <div><a href=\"#\" className=\"text-white\">Terms</a></div>\n            </ul>\n            <span className=\"text-white\">&copy; 2020 Salma-Mohamed</span>\n        </footer>\n            </div>\n        )\n    }\n}\n","/home/salma/Desktop/client/client/src/components/Calc.js",["94","95"],"import React, { useEffect, useState } from \"react\";\nimport './Calc.css'\n\n\n\nconst Calc = () => {\n  const [countdownDate, setCountdownDate] = useState(new Date('04/01/2021').getTime());\n  const [state, setState] = useState({\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  });\n\n  useEffect(() => {\n    setInterval(() => setNewTime(), 1000);\n  }, []);\n\n  const setNewTime = () => {\n    if (countdownDate) {\n      const currentTime = new Date().getTime();\n\n      const distanceToDate = countdownDate - currentTime;\n\n      let days = Math.floor(distanceToDate / (1000 * 60 * 60 * 24));\n      let hours = Math.floor(\n        (distanceToDate % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60),\n      );\n      let minutes = Math.floor(\n        (distanceToDate % (1000 * 60 * 60)) / (1000 * 60),\n      );\n      let seconds = Math.floor((distanceToDate % (1000 * 60)) / 1000);\n\n      const numbersToAddZeroTo = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n      days = `${days}`;\n      if (numbersToAddZeroTo.includes(hours)) {\n        hours = `0${hours}`;\n      } else if (numbersToAddZeroTo.includes(minutes)) {\n        minutes = `0${minutes}`;\n      } else if (numbersToAddZeroTo.includes(seconds)) {\n        seconds = `0${seconds}`;\n      }\n\n      setState({ days: days, hours: hours, minutes, seconds });\n    }\n  };\n\n  return (\n    <div>\n      \n      \n      <div className='countdown-wrapper'>\n        <div className='time-section'>\n          <div className='time'>{state.days || '0'}</div>\n          <small className=\"time-text\">Days</small>\n        </div>\n        <div className='time-section'>\n          <div className='time'>:</div>\n        </div>\n        <div className='time-section'>\n          <div className='time'>{state.hours || '00'}</div>\n          <small className=\"time-text\">Hours</small>\n        </div>\n        <div className='time-section'>\n          <div className='time'>:</div>\n        </div>\n        <div className='time-section'>\n          <div className='time'>{state.minutes || '00'}</div>\n          <small className=\"time-text\">Minutes</small>\n        </div>\n        <div className='time-section'>\n          <div className='time'>:</div>\n        </div>\n        <div className='time-section'>\n          <div className='time'>{state.seconds || '00'}</div>\n          <small className=\"time-text\">Seconds</small>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Calc;\n\n","/home/salma/Desktop/client/client/src/components/Rider.js",[],["96","97"],"/home/salma/Desktop/client/client/src/components/Timer.js",[],"/home/salma/Desktop/client/client/src/components/SharedCard.js",["98","99"],"import React, { Component } from 'react'\nimport './Rider.scss'\n\n\nfunction SharedCard(props) {\n   \n \n        return (\n            <div className=\"container\">\n            <div className=\"profile-card\">\n                <div className=\"card-header\">\n                    <img className=\"profile-image\"  alt=\"profile image\" src={props.imgUrl}/>\n                    <div className=\"profile-name\">{props.name}</div>\n                    <div className=\"profile-location\">\n                    <svg className=\"icon white\" viewBox=\"0 0 20 20\">\n                        <path\n                            d=\"M10,1.375c-3.17,0-5.75,2.548-5.75,5.682c0,6.685,5.259,11.276,5.483,11.469c0.152,0.132,0.382,0.132,0.534,0c0.224-0.193,5.481-4.784,5.483-11.469C15.75,3.923,13.171,1.375,10,1.375 M10,17.653c-1.064-1.024-4.929-5.127-4.929-10.596c0-2.68,2.212-4.861,4.929-4.861s4.929,2.181,4.929,4.861C14.927,12.518,11.063,16.627,10,17.653 M10,3.839c-1.815,0-3.286,1.47-3.286,3.286s1.47,3.286,3.286,3.286s3.286-1.47,3.286-3.286S11.815,3.839,10,3.839 M10,9.589c-1.359,0-2.464-1.105-2.464-2.464S8.641,4.661,10,4.661s2.464,1.105,2.464,2.464S11.359,9.589,10,9.589\">\n                        </path>\n                    </svg>\n                    \n                    {props.city}\n                    </div>\n                    <div className=\"divider\">\n                        <svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1200 120\" preserveAspectRatio=\"none\">\n                            <path d=\"M321.39,56.44c58-10.79,114.16-30.13,172-41.86,82.39-16.72,168.19-17.73,250.45-.39C823.78,31,906.67,72,985.66,92.83c70.05,18.48,146.53,26.09,214.34,3V0H0V27.35A600.21,600.21,0,0,0,321.39,56.44Z\"></path>\n                        </svg>\n                    </div>\n                </div>\n            \n            </div>\n        </div>\n        )\n    }\nexport default SharedCard;","/home/salma/Desktop/client/client/src/components/Home.js",[],["100","101"],"/home/salma/Desktop/client/client/src/components/Location.js",["102"],"import React, { Component } from \"react\";\nimport \"./Location.css\";\nimport L from \"leaflet\";\nimport Data from \"../components/Data\";\nimport { TileLayer, Marker, Popup, MapContainer } from \"react-leaflet\";\nimport icon from \"./assets /icon2.png\";\n\n\n\n// console.log(Data)\n\n class Location extends Component {\n  constructor(){\n    super();\n    this.state= {\n     todos: Data,\n     zoom: \"13\"\n \n   }\n\n  };\n\n\n\n  myIcon = L.icon({\n    iconUrl: icon,\n    iconSize: [38, 95], // size of the icon\n    iconAnchor: [22, 94], // point of the icon which will correspond to marker's location\n    popupAnchor: [-3, -76],\n  });\n\n  render() {\n    const first = [this.state.todos[0].position[0].lat, this.state.todos[0].position[0].lng];\n    const { todos } = this.state;\n    \n    return (\n      <div className=\"map\">\n        <MapContainer className=\"map\" center={first} zoom={this.state.zoom} >\n        <TileLayer\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        /> \n        {\n        todos.map((item, i) => {\n          let pointer = [item.position[0].lat, item.position[0].lng];\n\n          return (\n        \n        // {markers}\n\n              <Marker position={pointer} icon={this.myIcon} key={i}>\n                <Popup>\n                <div className=\"card text-center\" style={{backgroundColor:'#743778'}}>\n                <img className=\"profile-image\"  alt=\"profile image\" src={item.imgUrl}/>\n\n                  <h3>\n                    <small>{item.name}</small>\n                  </h3>\n                  <p>\n                    <small>{item.city}</small>\n                  </p>\n                  <p>\n                    <small>{item.state}</small>\n                  </p>\n                  </div>\n                </Popup>\n              </Marker>\n            )\n\n        })}\n        </MapContainer >\n\n      </div>\n    );\n     \n\n    }\n  }\n\nexport default Location;\n",["103","104"],"/home/salma/Desktop/client/client/src/components/Contest.js",["105"],"import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './Contest.css'\n\n\nconst Contest = () => {\n    // success and error message\n    const successMsg = () => toast.success(\"Slogan submitted successfully!\");\n    const warningMsg = () => toast.warning(\"Record already exists!\")\n    const errorMsg = () => toast.error(\"An error occurred!\");\n\n    // my hooks\n    const [firstname, setFirstname] = useState('');\n    const [lastname, setLastname] = useState('');\n    const [email, setEmail] = useState('');\n    const [slogan, setSlogan] = useState('');\n    const [btnValue, setBtnValue] = useState('SUBMIT')\n    const [error, setError] = useState('')\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // check if all fields are filled\n        if (!firstname || !lastname || !email || !slogan) {\n            setError('*All fields are required');\n            return false;\n        }\n        // check if the email is valid\n        if (/\\S+@\\S+\\.\\S+/.test(email) === false) {\n            setError('*Enter a valid email address')\n            return false;\n        }\n\n        // check for length of slogan\n        if (slogan.length > 50) {\n            setError('*Slogan idea must be under 50 characters')\n            return false;\n        }\n\n        // when all input fields are filled\n        if (firstname && lastname && email && slogan){\n            setError('')\n            setBtnValue('Sending...')\n\n            // prepare data\n            const entry = {\n                firstname,\n                lastname,\n                email,\n                slogan,\n            }\n\n            axios({\n                method: 'POST',\n                url: 'https://mysterious-sands-76152.herokuapp.com/api/v1/slogans',\n                header: {\n                    'Content-Type': 'application/json',\n                    'Access-Control-Allow-Origin' : true,\n                    \n                },\n               \n                data: entry\n\n            }).then((response) => {\n                const { data:{ status } } = response\n                console.log(response);\n                switch (status) {\n                    case \"Success\":\n                        // clear all entries\n                        setFirstname('')\n                        setLastname('')\n                        setEmail('')\n                        setSlogan('')\n                        setBtnValue('SUBMIT')\n                        // call react-toastify\n                        successMsg()\n                        break;\n                    case \"Warning\":\n                        // return btn text\n                        setBtnValue('SUBMIT')\n                        // call react-toastify\n                        warningMsg()\n                        break;\n                    default:\n                        // return btn text\n                        setBtnValue('SUBMIT')\n                        // call react-toastify\n                        errorMsg()\n                        break;\n                }\n                \n            }).catch((err) => {\n                console.log(err);\n                errorMsg()\n            })\n        \n        }\n\n    }\n    return (\n        <div>\n            <div className=\"card contest-card\">\n                <div className=\"card-body heading-txt\">\n                    <h3>It is the contest that delight us, and not the victory ~ Blaise Pascal</h3>\n                </div>\n            </div>\n        <div className=\"bg-contest\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-3\"></div>\n                    <div className=\"col-sm-12 col-md-6\">\n                    <ToastContainer />\n                        <form className=\"contest-form mt-5\" onSubmit={handleSubmit}>\n                        <h3>Submit Your Slogan</h3>\n                        <p className=\"text-danger\">{error}</p>\n                        <div className=\"row\">\n                            <div className=\"col-sm-12 col-md-6 input-group mb-3\">   \n                                <div className=\"input-group-prepend\">\n                                    <span className=\"input-group-text\" id=\"basic-addon1\"><span className=\"fas fa-user-circle\"></span></span>\n                                </div>\n                            <input type=\"text\" className=\"form-control\" placeholder=\"First Name\" aria-label=\"firstname\" maxLength=\"15\" value={firstname} onChange={e => setFirstname(e.target.value)} aria-describedby=\"basic-addon1\" required/>\n                            </div>\n                        \n                            <div className=\"col-sm-12 col-md-6 input-group mb-3\">   \n                                <div className=\"input-group-prepend\">\n                                    <span className=\"input-group-text\" id=\"basic-addon1\"><span className=\"fas fa-user-circle\"></span></span>\n                                </div>\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Last Name\" aria-label=\"lastname\" maxLength=\"15\" value={lastname} onChange={e => setLastname(e.target.value)} aria-describedby=\"basic-addon1\" required/>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-sm-12 input-group mb-3\">   \n                                <div className=\"input-group-prepend\">\n                                    <span className=\"input-group-text\" id=\"basic-addon1\"><span className=\"fas fa-envelope\"></span></span>\n                                </div>\n                            <input type=\"email\" className=\"form-control\" placeholder=\"Email Address\" value={email} onChange={e => setEmail(e.target.value)} aria-label=\"email\" aria-describedby=\"basic-addon1\" required/>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-sm-12\">\n                                <div className=\"form-group\">\n                                    <textarea className=\"form-control\" id=\"message\" rows=\"3\" maxLength=\"50\" value={slogan} onChange={e => setSlogan(e.target.value)} placeholder=\"Type your slogan here...\" required></textarea>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                        <div className=\"col-sm-12\">\n                            <div className=\"submit_btn\">\n                                <input type=\"submit\" className=\"form-control btn btn-primary\" onClick={handleSubmit} value={btnValue} />\n                            </div>\n                        </div>\n                        </div>\n                        </form>\n                    </div>\n                </div>\n               \n            </div>\n            </div>\n           \n        </div>\n    )\n}\n\nexport default Contest","/home/salma/Desktop/client/client/src/components/App.js",["106"],"import React from \"react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\nimport Photos from '../components/Photos'\nimport Location from '../components/Location'\nimport Rider from '../components/Rider'\nimport Home from '../components/Home'\nimport Contest from '../components/Contest'\nimport Slogans from '../components/Slogan'\nimport './App.css'\n\n\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n   \n\n<nav className=\"navbar navbar-expand-lg navbar-light bg-display sticky-top \">\n  \n  <Link className=\"navbar-brand text-white\" to=\"/\" style={{fontWeight:\"1000px\"}}>BOULDER BIKE TOUR</Link>\n\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span className=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul className=\"navbar-nav ml-auto\">\n      \n    <li className=\"nav-item\">\n              <Link className=\"nav-link text-white\" to=\"/\">Home</Link>\n        </li>\n      <li className=\"nav-item\">\n              <Link className=\"nav-link text-white\" to=\"/photos\">Photo</Link>\n        </li>\n        <li className=\"nav-item\">\n            <Link className=\"nav-link text-white\" to=\"/Location\">Location</Link>\n        </li>\n        <li className=\"nav-item\">\n            <Link className=\"nav-link text-white\" to=\"/rider\">Rider</Link>\n        </li>\n        <li className=\"nav-item\">\n            <Link className=\"nav-link text-white\" to=\"/contest\">Contest</Link>\n        </li>\n    </ul>\n    \n  </div>\n</nav>\n\n    \n            \n        <Switch>\n        <Route exact path=\"/\">\n            <Home/>\n            </Route >\n          <Route path=\"/photos\">\n            <Photos />\n            </Route >\n          <Route path=\"/Location\">\n            <Location />\n            </Route >\n            <Route path=\"/rider\">\n              <Rider />\n              </Route >\n            <Route path=\"/contest\">\n                <Contest/>\n            </Route >\n            {/* <Route path='/submissions' component={Slogans} /> */}\n\n         \n        </Switch>\n        \n      </div>\n    </Router>\n  );\n};\n\n","/home/salma/Desktop/client/client/src/components/Products.js",[],"/home/salma/Desktop/client/client/src/components/Spinner.js",[],"/home/salma/Desktop/client/client/src/components/Images.js",[],"/home/salma/Desktop/client/client/src/components/pagination.js",[],"/home/salma/Desktop/client/client/src/index.js",[],"/home/salma/Desktop/client/client/src/components/Slogan.js",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"107","replacedBy":"111"},{"ruleId":"109","replacedBy":"112"},{"ruleId":"107","replacedBy":"113"},{"ruleId":"109","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":9,"column":18,"nodeType":"117","endLine":9,"endColumn":53},{"ruleId":"115","severity":1,"message":"116","line":10,"column":18,"nodeType":"117","endLine":10,"endColumn":53},{"ruleId":"118","severity":1,"message":"119","line":7,"column":25,"nodeType":"120","messageId":"121","endLine":7,"endColumn":41},{"ruleId":"122","severity":1,"message":"123","line":17,"column":6,"nodeType":"124","endLine":17,"endColumn":8,"suggestions":"125"},{"ruleId":"107","replacedBy":"126"},{"ruleId":"109","replacedBy":"127"},{"ruleId":"118","severity":1,"message":"128","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":26},{"ruleId":"129","severity":1,"message":"130","line":12,"column":21,"nodeType":"117","endLine":12,"endColumn":93},{"ruleId":"107","replacedBy":"131"},{"ruleId":"109","replacedBy":"132"},{"ruleId":"129","severity":1,"message":"130","line":54,"column":17,"nodeType":"117","endLine":54,"endColumn":88},{"ruleId":"107","replacedBy":"133"},{"ruleId":"109","replacedBy":"134"},{"ruleId":"118","severity":1,"message":"135","line":2,"column":10,"nodeType":"120","messageId":"121","endLine":2,"endColumn":14},{"ruleId":"118","severity":1,"message":"136","line":13,"column":8,"nodeType":"120","messageId":"121","endLine":13,"endColumn":15},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],["137"],["138"],["137"],["138"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'setCountdownDate' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setNewTime'. Either include it or remove the dependency array.","ArrayExpression",["139"],["137"],["138"],"'Component' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",["137"],["138"],["137"],["138"],"'Link' is defined but never used.","'Slogans' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},"Update the dependencies array to be: [setNewTime]",{"range":"142","text":"143"},[357,359],"[setNewTime]"]